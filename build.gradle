buildscript {
	ext {
		kotlinVersion = '1.0.3'
		springBootVersion = '1.4.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
	baseName = 'websocket-issue'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
  compile.exclude module: "spring-boot-starter-tomcat"
  compile.exclude module: "tomcat-embed-el"
  compile.exclude module: "tomcat-jdbc"
  compile.exclude module: "evo-inflector"
  all*.exclude group: "commons-logging", module: "commons-logging"
  all*.exclude group: "com.google.guava", module: "guava-jdk5"
}

dependencies {
	compile "javax.inject:javax.inject:1"
	compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml"
	compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
	compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
	compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.8.1"
	compile "org.springframework.boot:spring-boot-starter-data-rest"
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-websocket')
	compile "org.springframework.boot:spring-boot-starter-undertow"
	compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
